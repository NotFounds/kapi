; start           	main
		.cpu		300HA
		.section	A,code,locate=H'000000
		.data.l		reset
		.section	B,code,locate=H'000100
reset:		mov.l		#H'FFFF10,ER7
		bra		main
; var_byte        	smr1
; set_address     	1048504
smr1		.equ		H'000FFFB8
; var_byte        	brr1
; set_address     	1048505
brr1		.equ		H'000FFFB9
; var_byte        	scr1
; set_address     	1048506
scr1		.equ		H'000FFFBA
; var_byte        	tdr1
; set_address     	1048507
tdr1		.equ		H'000FFFBB
; var_byte        	ssr1
; set_address     	1048508
ssr1		.equ		H'000FFFBC
; var_byte        	rdr1
; set_address     	1048509
rdr1		.equ		H'000FFFBD
; var_byte        	c
; start_func      	init
init		.equ		$
; start_prologue  	-
		push.l		ER6
		mov.l		ER7,ER6
		push.l		ER5
		push.l		ER4
		push.l		ER3
		push.l		ER2
		push.l		ER1
		push.l		ER0
; var_word        	count
; var_byte        	c
; var_byte        	s
; end_prologue    	-
		sub.l		#12,ER7
; load_num        	0
		mov.l		@L0013,ER0
; store_id        	scr1
		mov.b		R0L,@scr1
; load_num        	0
		mov.l		@L0013,ER0
; store_id        	smr1
		mov.b		R0L,@smr1
; load_num        	51
		mov.l		@L0014,ER0
; store_id        	brr1
		mov.b		R0L,@brr1
; load_num        	280
		mov.l		@L0015,ER0
; store_id        	count
		mov.l		ER0,@(-28,ER6)
; label           	L0000
L0000		.equ		$
; load_id         	count
		mov.l		@(-28,ER6),ER0
; load_num        	0
		mov.l		@L0013,ER1
; ne              	-
		cmp.l		ER1,ER0
		bne		L0016
		mov.l		#H'00000000,ER0
		bra		L0017
L0016:		mov.l		#H'FFFFFFFF,ER0
L0017		.equ		$
; tst             	-
		and.l		ER0,ER0
; jeq             	L0001
		beq		L0001
; load_id         	count
		mov.l		@(-28,ER6),ER0
; load_num        	1
		mov.l		@L0018,ER1
; sub             	-
		sub.l		ER1,ER0
; store_id        	count
		mov.l		ER0,@(-28,ER6)
; jmp             	L0000
		bra		L0000
; label           	L0001
L0001		.equ		$
; load_num        	48
		mov.l		@L0019,ER0
; store_id        	scr1
		mov.b		R0L,@scr1
; load_id         	ssr1
		mov.b		@ssr1,R0L
		exts.w		R0
		exts.l		ER0
; store_id        	c
		mov.l		ER0,@(-32,ER6)
; load_num        	128
		mov.l		@L0020,ER0
; store_id        	ssr1
		mov.b		R0L,@ssr1
; end_func        	-
L0012		.equ		$
		add.l		#12,ER7
		pop.l		ER0
		pop.l		ER1
		pop.l		ER2
		pop.l		ER3
		pop.l		ER4
		pop.l		ER5
		pop.l		ER6
		rts		
; start_func      	send
send		.equ		$
; var_byte        	c
; start_prologue  	-
		push.l		ER6
		mov.l		ER7,ER6
		push.l		ER5
		push.l		ER4
		push.l		ER3
		push.l		ER2
		push.l		ER1
		push.l		ER0
; var_byte        	s
; end_prologue    	-
		sub.l		#4,ER7
; load_id         	ssr1
		mov.b		@ssr1,R0L
		exts.w		R0
		exts.l		ER0
; store_id        	s
		mov.l		ER0,@(-28,ER6)
; label           	L0002
L0002		.equ		$
; load_id         	s
		mov.l		@(-28,ER6),ER0
; load_num        	128
		mov.l		@L0020,ER1
; and             	-
		and.l		ER1,ER0
; load_num        	0
		mov.l		@L0013,ER1
; eq              	-
		cmp.l		ER1,ER0
		beq		L0022
		mov.l		#H'00000000,ER0
		bra		L0023
L0022:		mov.l		#H'FFFFFFFF,ER0
L0023		.equ		$
; tst             	-
		and.l		ER0,ER0
; jeq             	L0003
		beq		L0003
; load_id         	ssr1
		mov.b		@ssr1,R0L
		exts.w		R0
		exts.l		ER0
; store_id        	s
		mov.l		ER0,@(-28,ER6)
; jmp             	L0002
		bra		L0002
; label           	L0003
L0003		.equ		$
; load_id         	c
		mov.l		@(12,ER6),ER0
; store_id        	tdr1
		mov.b		R0L,@tdr1
; load_id         	s
		mov.l		@(-28,ER6),ER0
; load_num        	127
		mov.l		@L0024,ER1
; and             	-
		and.l		ER1,ER0
; store_id        	ssr1
		mov.b		R0L,@ssr1
; end_func        	-
L0021		.equ		$
		add.l		#4,ER7
		pop.l		ER0
		pop.l		ER1
		pop.l		ER2
		pop.l		ER3
		pop.l		ER4
		pop.l		ER5
		pop.l		ER6
		rts		
; start_func      	receive
receive		.equ		$
; start_prologue  	-
		push.l		ER6
		mov.l		ER7,ER6
		push.l		ER5
		push.l		ER4
		push.l		ER3
		push.l		ER2
		push.l		ER1
		push.l		ER0
; var_byte        	s
; var_byte        	c
; end_prologue    	-
		sub.l		#8,ER7
; label           	L0004
L0004		.equ		$
; load_id         	ssr1
		mov.b		@ssr1,R0L
		exts.w		R0
		exts.l		ER0
; store_id        	s
		mov.l		ER0,@(-28,ER6)
; label           	L0005
L0005		.equ		$
; load_id         	s
		mov.l		@(-28,ER6),ER0
; load_num        	120
		mov.l		@L0026,ER1
; and             	-
		and.l		ER1,ER0
; load_num        	0
		mov.l		@L0013,ER1
; eq              	-
		cmp.l		ER1,ER0
		beq		L0027
		mov.l		#H'00000000,ER0
		bra		L0028
L0027:		mov.l		#H'FFFFFFFF,ER0
L0028		.equ		$
; tst             	-
		and.l		ER0,ER0
; jeq             	L0006
		beq		L0006
; load_id         	ssr1
		mov.b		@ssr1,R0L
		exts.w		R0
		exts.l		ER0
; store_id        	s
		mov.l		ER0,@(-28,ER6)
; jmp             	L0005
		bra		L0005
; label           	L0006
L0006		.equ		$
; load_id         	s
		mov.l		@(-28,ER6),ER0
; load_num        	64
		mov.l		@L0029,ER1
; and             	-
		and.l		ER1,ER0
; load_num        	0
		mov.l		@L0013,ER1
; ne              	-
		cmp.l		ER1,ER0
		bne		L0030
		mov.l		#H'00000000,ER0
		bra		L0031
L0030:		mov.l		#H'FFFFFFFF,ER0
L0031		.equ		$
; tst             	-
		and.l		ER0,ER0
; jeq             	L0007
		beq		L0007
; load_id         	rdr1
		mov.b		@rdr1,R0L
		exts.w		R0
		exts.l		ER0
; store_id        	c
		mov.l		ER0,@(-32,ER6)
; load_id         	s
		mov.l		@(-28,ER6),ER0
; load_num        	191
		mov.l		@L0032,ER1
; and             	-
		and.l		ER1,ER0
; store_id        	ssr1
		mov.b		R0L,@ssr1
; jmp             	L0008
		bra		L0008
; label           	L0007
L0007		.equ		$
; load_num        	36
		mov.l		@L0033,ER0
; store_id        	c
		mov.l		ER0,@(-32,ER6)
; load_id         	s
		mov.l		@(-28,ER6),ER0
; load_num        	199
		mov.l		@L0034,ER1
; and             	-
		and.l		ER1,ER0
; store_id        	ssr1
		mov.b		R0L,@ssr1
; label           	L0008
L0008		.equ		$
; load_id         	s
		mov.l		@(-28,ER6),ER0
; load_id         	c
		mov.l		@(-32,ER6),ER1
; ne              	-
		cmp.l		ER1,ER0
		bne		L0035
		mov.l		#H'00000000,ER0
		bra		L0036
L0035:		mov.l		#H'FFFFFFFF,ER0
L0036		.equ		$
; tst             	-
		and.l		ER0,ER0
; jeq             	L0009
		beq		L0009
; jmp             	L0004
		bra		L0004
; label           	L0009
L0009		.equ		$
; load_id         	c
		mov.l		@(-32,ER6),ER0
; store_id        	ans
		mov.l		ER0,@(8,ER6)
; return          	-
		bra		L0025
; end_func        	-
L0025		.equ		$
		add.l		#8,ER7
		pop.l		ER0
		pop.l		ER1
		pop.l		ER2
		pop.l		ER3
		pop.l		ER4
		pop.l		ER5
		pop.l		ER6
		rts		
; label           	main
main		.equ		$
; load_num        	0
		mov.l		@L0013,ER0
; store_arg       	-
		push.l		ER0
; call            	init
		bsr		init
; cancel_arg      	-
		pop.l		ER0
; load_num        	42
		mov.l		@L0037,ER0
; store_arg       	-
		push.l		ER0
; load_num        	0
		mov.l		@L0013,ER0
; store_arg       	-
		push.l		ER0
; call            	send
		bsr		send
; cancel_arg      	-
		pop.l		ER0
; cancel_arg      	-
		pop.l		ER0
; label           	loop
loop		.equ		$
; label           	L0010
L0010		.equ		$
; load_num        	0
		mov.l		@L0013,ER0
; store_arg       	-
		push.l		ER0
; call            	receive
		bsr		receive
; load_arg        	-
		pop.l		ER0
; store_id        	c
		mov.b		R0L,@c
; load_id         	c
		mov.b		@c,R0L
		exts.w		R0
		exts.l		ER0
; load_num        	0
		mov.l		@L0013,ER1
; eq              	-
		cmp.l		ER1,ER0
		beq		L0038
		mov.l		#H'00000000,ER0
		bra		L0039
L0038:		mov.l		#H'FFFFFFFF,ER0
L0039		.equ		$
; tst             	-
		and.l		ER0,ER0
; jeq             	L0011
		beq		L0011
; jmp             	L0010
		bra		L0010
; label           	L0011
L0011		.equ		$
; load_id         	c
		mov.b		@c,R0L
		exts.w		R0
		exts.l		ER0
; store_arg       	-
		push.l		ER0
; load_num        	0
		mov.l		@L0013,ER0
; store_arg       	-
		push.l		ER0
; call            	send
		bsr		send
; cancel_arg      	-
		pop.l		ER0
; cancel_arg      	-
		pop.l		ER0
; jmp             	loop
		bra		loop
; end             	-
		bra		$
		.align		2
L0013		.data.l		H'00000000
L0014		.data.l		H'00000033
L0015		.data.l		H'00000118
L0018		.data.l		H'00000001
L0019		.data.l		H'00000030
L0020		.data.l		H'00000080
L0024		.data.l		H'0000007F
L0026		.data.l		H'00000078
L0029		.data.l		H'00000040
L0032		.data.l		H'000000BF
L0033		.data.l		H'00000024
L0034		.data.l		H'000000C7
L0037		.data.l		H'0000002A
		.section	C,data,locate=H'FFBF20
		.align		2
c		.res.b		1
		.end
