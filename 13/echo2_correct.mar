		.cpu		300HA
		.section	A,code,locate=H'000000
		.data.l		reset
		.section	B,code,locate=H'000100
reset:		mov.l		#H'FFFF10,ER7
		bra		main
smr1		.equ		H'00FFFFB8
brr1		.equ		H'00FFFFB9
scr1		.equ		H'00FFFFBA
tdr1		.equ		H'00FFFFBB
ssr1		.equ		H'00FFFFBC
rdr1		.equ		H'00FFFFBD
init		.equ		$
		push.l		ER6
		mov.l		ER7,ER6
		push.l		ER5
		push.l		ER4
		push.l		ER3
		push.l		ER2
		push.l		ER1
		push.l		ER0
		sub.l		#12,ER7
		mov.l		@L0009,ER0
		mov.b		R0L,@scr1
		mov.l		@L0009,ER0
		mov.b		R0L,@smr1
		mov.l		@L0010,ER0
		mov.b		R0L,@brr1
		mov.l		@L0011,ER0
		mov.l		ER0,@(-28,ER6)
L0000		.equ		$
		mov.l		@(-28,ER6),ER0
		mov.l		@L0009,ER1
		cmp.l		ER1,ER0
		bne		L0012
		mov.l		#H'00000000,ER0
		bra		L0013
L0012:		mov.l		#H'FFFFFFFF,ER0
L0013		.equ		$
		and.l		ER0,ER0
		beq		L0001
		mov.l		@(-28,ER6),ER0
		mov.l		@L0014,ER1
		sub.l		ER1,ER0
		mov.l		ER0,@(-28,ER6)
		bra		L0000
L0001		.equ		$
		mov.l		@L0015,ER0
		mov.b		R0L,@scr1
		mov.b		@ssr1,R0L
		exts.w		R0
		exts.l		ER0
		mov.l		ER0,@(-32,ER6)
		mov.l		@L0016,ER0
		mov.b		R0L,@ssr1
L0008		.equ		$
		add.l		#12,ER7
		pop.l		ER0
		pop.l		ER1
		pop.l		ER2
		pop.l		ER3
		pop.l		ER4
		pop.l		ER5
		pop.l		ER6
		rts		
send		.equ		$
		push.l		ER6
		mov.l		ER7,ER6
		push.l		ER5
		push.l		ER4
		push.l		ER3
		push.l		ER2
		push.l		ER1
		push.l		ER0
		sub.l		#4,ER7
		mov.b		@ssr1,R0L
		exts.w		R0
		exts.l		ER0
		mov.l		ER0,@(-28,ER6)
L0002		.equ		$
		mov.l		@(-28,ER6),ER0
		mov.l		@L0016,ER1
		and.l		ER1,ER0
		mov.l		@L0009,ER1
		cmp.l		ER1,ER0
		beq		L0018
		mov.l		#H'00000000,ER0
		bra		L0019
L0018:		mov.l		#H'FFFFFFFF,ER0
L0019		.equ		$
		and.l		ER0,ER0
		beq		L0003
		mov.b		@ssr1,R0L
		exts.w		R0
		exts.l		ER0
		mov.l		ER0,@(-28,ER6)
		bra		L0002
L0003		.equ		$
		mov.l		@(12,ER6),ER0
		mov.b		R0L,@tdr1
		mov.l		@(-28,ER6),ER0
		mov.l		@L0020,ER1
		and.l		ER1,ER0
		mov.b		R0L,@ssr1
L0017		.equ		$
		add.l		#4,ER7
		pop.l		ER0
		pop.l		ER1
		pop.l		ER2
		pop.l		ER3
		pop.l		ER4
		pop.l		ER5
		pop.l		ER6
		rts		
receive		.equ		$
		push.l		ER6
		mov.l		ER7,ER6
		push.l		ER5
		push.l		ER4
		push.l		ER3
		push.l		ER2
		push.l		ER1
		push.l		ER0
		sub.l		#8,ER7
		mov.b		@ssr1,R0L
		exts.w		R0
		exts.l		ER0
		mov.l		ER0,@(-28,ER6)
L0004		.equ		$
		mov.l		@(-28,ER6),ER0
		mov.l		@L0022,ER1
		and.l		ER1,ER0
		mov.l		@L0009,ER1
		cmp.l		ER1,ER0
		beq		L0023
		mov.l		#H'00000000,ER0
		bra		L0024
L0023:		mov.l		#H'FFFFFFFF,ER0
L0024		.equ		$
		and.l		ER0,ER0
		beq		L0005
		mov.b		@ssr1,R0L
		exts.w		R0
		exts.l		ER0
		mov.l		ER0,@(-28,ER6)
		bra		L0004
L0005		.equ		$
		mov.l		@(-28,ER6),ER0
		mov.l		@L0010,ER1
		and.l		ER1,ER0
		mov.l		@L0009,ER1
		cmp.l		ER1,ER0
		bne		L0025
		mov.l		#H'00000000,ER0
		bra		L0026
L0025:		mov.l		#H'FFFFFFFF,ER0
L0026		.equ		$
		and.l		ER0,ER0
		beq		L0006
		mov.b		@rdr1,R0L
		exts.w		R0
		exts.l		ER0
		mov.l		ER0,@(-32,ER6)
		mov.l		@(-28,ER6),ER0
		mov.l		@L0027,ER1
		and.l		ER1,ER0
		mov.b		R0L,@ssr1
		bra		L0007
L0006		.equ		$
		mov.l		@L0028,ER0
		mov.l		ER0,@(-32,ER6)
		mov.l		@(-28,ER6),ER0
		mov.l		@L0029,ER1
		and.l		ER1,ER0
		mov.b		R0L,@ssr1
L0007		.equ		$
		mov.l		@(-32,ER6),ER0
		mov.l		ER0,@(8,ER6)
		bra		L0021
L0021		.equ		$
		add.l		#8,ER7
		pop.l		ER0
		pop.l		ER1
		pop.l		ER2
		pop.l		ER3
		pop.l		ER4
		pop.l		ER5
		pop.l		ER6
		rts		
main		.equ		$
		mov.l		@L0009,ER0
		push.l		ER0
		bsr		init
		pop.l		ER0
		mov.l		@L0030,ER0
		push.l		ER0
		mov.l		@L0009,ER0
		push.l		ER0
		bsr		send
		pop.l		ER0
		pop.l		ER0
loop		.equ		$
		mov.l		@L0009,ER0
		push.l		ER0
		bsr		receive
		pop.l		ER0
		mov.b		R0L,@c
		mov.b		@c,R0L
		exts.w		R0
		exts.l		ER0
		push.l		ER0
		mov.l		@L0009,ER0
		push.l		ER0
		bsr		send
		pop.l		ER0
		pop.l		ER0
		bra		loop
		bra		$
		.align		2
L0009		.data.l		H'00000000
L0010		.data.l		H'00000040
L0011		.data.l		H'00000118
L0014		.data.l		H'00000001
L0015		.data.l		H'00000030
L0016		.data.l		H'00000080
L0020		.data.l		H'0000007F
L0022		.data.l		H'00000078
L0027		.data.l		H'000000BF
L0028		.data.l		H'00000024
L0029		.data.l		H'000000C7
L0030		.data.l		H'0000002A
		.section	C,data,locate=H'FFBF20
		.align		2
c		.res.b		1
		.end
